#!/bin/bash

txtrst='\033[1;37m' # White
txtred='\033[1;31m' # Red
txtylw='\033[1;33m' # Yellow
txtpur='\033[1;35m' # Purple
txtgrn='\033[1;32m' # Green
txtgra='\033[1;30m' # Gray

WEB_ROOT_PATH=$1
BRANCH=$2

echo -e "${txtylw}=======================================${txtrst}"
echo -e "${txtgrn}  << Ïä§ÌÅ¨Î¶ΩÌä∏ üßê  >>${txtrst}"
echo -e "${txtgrn}  ÌôòÍ≤Ω :${txtrst}"
echo -e "${txtgrn}  - BRANCH: $BRANCH${txtrst}"
echo -e "${txtgrn}  - WEB_ROOT_PATH: $WEB_ROOT_PATH${txtrst}"
echo -e "${txtylw}=======================================${txtrst}"

## Branch Îã§Î•∏Ï†ê ÏûàÎäîÏßÄ ÌôïÏù∏
function check_df(){
  echo -e "${txtylw}=======================================${txtrst}"
  echo -e "${txtgrn}>> Check Differences üßêÔ∏è ${txtrst}"
  git -C $WEB_ROOT_PATH fetch
  master=$(git -C $WEB_ROOT_PATH rev-parse $BRANCH)
  remote=$(git -C $WEB_ROOT_PATH rev-parse origin/$BRANCH)

  if [[ $master == $remote ]]; then
    echo -e "${txtred}[$(date)] Nothing to do!!! üò´${txtrst}"
    exit 0
  fi
  commit_msg=$(git -C $WEB_ROOT_PATH log origin/step3 --oneline -1)
  echo -e "${txtgrn}>> Has Difference : $commit_msg ‚úÖÔ∏è ${txtrst}"
  echo -e "${txtylw}=======================================${txtrst}"
}

## Ï†ÄÏû•ÏÜå pull
function pull(){
  echo -e "${txtylw}=======================================${txtrst}"
  echo -e "${txtgrn}>> Pull Request üèÉ‚ôÇÔ∏è ${txtrst}"
  git -C $WEB_ROOT_PATH pull origin $BRANCH
  echo -e "${txtgrn}>> Pull Request END ‚úÖÔ∏è ${txtrst}"
  echo -e "${txtylw}=======================================${txtrst}"
}

## gradle build
function build(){
  echo -e "${txtylw}=======================================${txtrst}"
  echo -e "${txtgrn}>> Start Build Gradle!! üõ†üõ†${txtrst}"
  sh $WEB_ROOT_PATH/gradlew -p $WEB_ROOT_PATH --console=plain clean build
  echo -e "${txtgrn}>> Build Gradle!! END  ‚úÖÔ∏è ${txtrst}"
  echo -e "${txtylw}=======================================${txtrst}"
}

## ÌîÑÎ°úÏÑ∏Ïä§ pidÎ•º Ï∞æÎäî Î™ÖÎ†πÏñ¥
## ÌîÑÎ°úÏÑ∏Ïä§Î•º Ï¢ÖÎ£åÌïòÎäî Î™ÖÎ†πÏñ¥
function kill_process(){
  echo -e "${txtylw}=======================================${txtrst}"
  echo -e "${txtgrn}>> Ïû•ÎπÑÎ•º Ï†ïÏßÄ Ìï©ÎãàÎã§!  ‚ùå‚ùå‚ùå ${txtrst}"
  kill -9 $(lsof -t -i:8080)
  echo -e "${txtgrn}>> Ïû•ÎπÑ Ï†ïÏßÄ END  ‚úÖ ${txtrst}"
  echo -e "${txtylw}=======================================${txtrst}"
}

## ÏÉàÎ°ú ÎπåÎìúÌïú Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÏãúÏûëÌïòÎäî Î™ÖÎ†πÏñ¥
function start_app(){
  echo -e "${txtylw}=======================================${txtrst}"
  echo -e "${txtgrn}>> Start New Application üçÄüçÄüçÄ${txtrst}"
  nohup java -jar -Djava.security.egd=file:/dev/./urandom -Dspring.profiles.active=local $(find $WEB_ROOT_PATH/build -name "*jar") 1> $HOME/application.log 2>&1  &
  echo -e "${txtgrn}>> Start New Application Successfully!!!  ‚úÖÔ∏è ${txtrst}"
  echo -e "${txtylw}=======================================${txtrst}"
}

#Ìï®Ïàò Ïã§Ìñâ
check_df;
pull;
build;
kill_process;
start_app;
